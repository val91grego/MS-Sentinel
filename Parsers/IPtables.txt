let iptablesData = Syslog
| order by TimeGenerated
| where ProcessName == "kernel"
| where SeverityLevel == "warning"
| where SyslogMessage !contains "kauditd"
| where SyslogMessage !contains "audit_printk"
;
let iptablesEvents = iptablesData
| extend SourceIP = tostring(extract_all(@"((?:[0-9]{1,3}\.){3}[0-9]{1,3})", SyslogMessage)[0])
| extend DestinationIP = tostring(extract_all(@"((?:[0-9]{1,3}\.){3}[0-9]{1,3})", SyslogMessage)[1])
| extend DeviceMacAddress = tostring(extract_all(@'MAC=(\S+)', SyslogMessage)[0])
| extend DestinationPort = tostring(extract_all(@'DPT=(\S+)', SyslogMessage)[0])
| extend SourcePort = tostring(extract_all(@'SPT=(\S+)', SyslogMessage)[0])
| extend TransportProtocol = tostring(extract_all(@'PROTO=(\S+)', SyslogMessage)[0])
| extend DeviceInboundInterface = tostring(extract_all(@'IN=(\S+)', SyslogMessage)[0])
| extend DeviceOutboundInterface = tostring(extract_all(@'OUT=(\S+)', SyslogMessage)[0])
| extend ConnectionId = tostring(extract_all(@'ID=(\S+)', SyslogMessage)[0])
| extend TTL = tostring(extract_all(@'TTL=(\S+)', SyslogMessage)[0])
| extend WINDOW = tostring(extract_all(@'WINDOW=(\S+)', SyslogMessage)[0])
| extend EventName = tostring(extract_all(@'] (.*?):', SyslogMessage)[0])
| extend DeviceAction =
iff(EventName contains "DROP", "Drop",
iff(EventName contains "AUDIT ACCEPT", "Accept",
iff(EventName contains "PASS", "Pass",
iff(EventName contains "reject", "Reject",
iff(EventName contains "BLOCKED", "Blocked",
"None")))))
| extend EventVendor = 'IPTables'
| extend EventProduct = 'IPTables'
| extend Flags = case(TransportProtocol == "TCP", split(tostring(extract_all(@'RES=[^ ]* (.*) URGP*', SyslogMessage)[0]), " "), "")
;
iptablesEvents
| project
TimeGenerated,
EventName,
SourceIP,
HostName,
DestinationIP,
SourcePort,
DestinationPort,
TransportProtocol,
Flags,
DeviceAction,
DeviceInboundInterface,
DeviceOutboundInterface,
TTL,
SyslogMessage